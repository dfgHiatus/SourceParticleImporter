<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:diagnostics="clr-namespace:System.Diagnostics;assembly=WindowsBase"
                    xmlns:c="clr-namespace:DmxPad.Controls" xmlns:converters="clr-namespace:DmxPad.Controls.TreeGridViewConverters">
    <converters:ExpanderMargin x:Key="ExpanderMarginConverter"/>
    <converters:ExpanderVisibility x:Key="ExpanderVisibilityConverter"/>
    <converters:NegateDouble x:Key="NegateDoubleConverter"/>
    <converters:CellMargin x:Key="CellMarginConverter"/>
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    
    <Style TargetType="{x:Type c:TreeGridView}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:TreeGridView}">
                    <Border BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" BorderThickness="1" Background="{TemplateBinding Background}">
                        <Grid Grid.IsSharedSizeScope="True">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Border Visibility="{TemplateBinding ShowHeaders,Converter={StaticResource BooleanToVisibilityConverter}}">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Offset="0" Color="{DynamicResource {x:Static SystemColors.ControlLightLightColorKey}}" />
                                        <GradientStop Offset="1" Color="{DynamicResource {x:Static SystemColors.MenuBarColorKey}}" />
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Canvas Margin="0,2" ClipToBounds="True" Width="{TemplateBinding ActualWidth}" Height="{Binding ElementName=PART_Grid,Path=ActualHeight}">
                                    <Grid Name="PART_Grid" Canvas.Left="{Binding ElementName=SV,Path=ContentHorizontalOffset, Converter={StaticResource NegateDoubleConverter}}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition SharedSizeGroup="TitleHeaderColumn"/>
                                        </Grid.ColumnDefinitions>
                                        <c:TreeGridViewCell Grid.Column="0" Content="{TemplateBinding TitleColumnHeader}"/>
                                    </Grid>
                                </Canvas>
                            </Border>
                            <Border Grid.Row="1" Name="Border" BorderThickness="0,1,0,0" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}">
                                <ScrollViewer Name="SV" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Auto">
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </Border>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HierarchyToggleButton" TargetType="ToggleButton">
        <Style.Resources>
            <Color x:Key="GlyphColor">#FF444444</Color>
        </Style.Resources>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid Width="15" Height="13" Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Collapsed">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Expanded">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Path x:Name="Collapsed" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="1,1,1,1" Data="M 4 0 L 8 4 L 4 8 Z">
                            <Path.Fill>
                                <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                            </Path.Fill>
                        </Path>
                        <Path x:Name="Expanded" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="1,1,1,1" Data="M 0 4 L 8 4 L 4 8 Z" Visibility="Hidden">
                            <Path.Fill>
                                <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                            </Path.Fill>
                        </Path>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type c:TreeGridViewItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:TreeGridViewItem}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Border Grid.Row="0" Background="{TemplateBinding Background}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition SharedSizeGroup="TitleHeaderColumn"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <c:TreeGridViewCell Grid.Row="0">
                                    <StackPanel Orientation="Horizontal">
                                        <ToggleButton Width="10" Height="15" Style="{StaticResource HierarchyToggleButton}"
                                                      Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Items.IsEmpty, Converter={StaticResource ExpanderVisibilityConverter}, Mode=OneWay}" 
                                                      IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsExpanded}" 
                                                      Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Indent, Converter={StaticResource ExpanderMarginConverter}, Mode=OneWay}"/>
                                        <ContentPresenter ContentSource="Title"/>
                                    </StackPanel>
                                </c:TreeGridViewCell>
                                <Grid Name="PART_Columns" Grid.Column="1"/>
                            </Grid>
                        </Border>
                        <ItemsPresenter Grid.Row="1" Visibility="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type c:TreeGridViewCell}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:TreeGridViewCell}">
                    <!-- RelativeSource FindAncestor fails in the designer, see https://connect.microsoft.com/VisualStudio/feedback/details/798456/ -->
                    <Border Margin="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Owner.ColumnSpacing, Converter={StaticResource CellMarginConverter}, ConverterParameter=3}"
                            Visibility="{TemplateBinding Visibility}">
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>